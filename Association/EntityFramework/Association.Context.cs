//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Association.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AssociationEntities : DbContext
    {
        public AssociationEntities()
            : base("name=AssociationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<RS_Acc_Trans_TypeOfType> RS_Acc_Trans_TypeOfType { get; set; }
        public DbSet<Rs_Acc_Transaction> Rs_Acc_Transaction { get; set; }
        public DbSet<RS_Memb_Transaction> RS_Memb_Transaction { get; set; }
        public DbSet<RS_Traning_Process> RS_Traning_Process { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<Tbl_Acc_TypeOfType> Tbl_Acc_TypeOfType { get; set; }
        public DbSet<Tbl_Account> Tbl_Account { get; set; }
        public DbSet<Tbl_Appraisail_Rate> Tbl_Appraisail_Rate { get; set; }
        public DbSet<Tbl_Audit_Login> Tbl_Audit_Login { get; set; }
        public DbSet<Tbl_Central_Departments> Tbl_Central_Departments { get; set; }
        public DbSet<Tbl_Course_Exam> Tbl_Course_Exam { get; set; }
        public DbSet<Tbl_Course_Phase> Tbl_Course_Phase { get; set; }
        public DbSet<Tbl_Courses> Tbl_Courses { get; set; }
        public DbSet<Tbl_Courses_Funders> Tbl_Courses_Funders { get; set; }
        public DbSet<Tbl_Courses_Status> Tbl_Courses_Status { get; set; }
        public DbSet<Tbl_Courses_Type> Tbl_Courses_Type { get; set; }
        public DbSet<Tbl_Departments> Tbl_Departments { get; set; }
        public DbSet<Tbl_Education_Qualification> Tbl_Education_Qualification { get; set; }
        public DbSet<TBL_Exception> TBL_Exception { get; set; }
        public DbSet<Tbl_Funational_Group> Tbl_Funational_Group { get; set; }
        public DbSet<Tbl_Gender_Type> Tbl_Gender_Type { get; set; }
        public DbSet<Tbl_Illegal_Earning> Tbl_Illegal_Earning { get; set; }
        public DbSet<Tbl_Insurance_Subscripe> Tbl_Insurance_Subscripe { get; set; }
        public DbSet<Tbl_Insurance_Type> Tbl_Insurance_Type { get; set; }
        public DbSet<Tbl_IPS> Tbl_IPS { get; set; }
        public DbSet<Tbl_Jobs_Titles> Tbl_Jobs_Titles { get; set; }
        public DbSet<Tbl_kinshipType> Tbl_kinshipType { get; set; }
        public DbSet<Tbl_Memb_Sub_Over> Tbl_Memb_Sub_Over { get; set; }
        public DbSet<Tbl_Member_Insurance> Tbl_Member_Insurance { get; set; }
        public DbSet<Tbl_Member_Registration> Tbl_Member_Registration { get; set; }
        public DbSet<Tbl_MembStatus> Tbl_MembStatus { get; set; }
        public DbSet<Tbl_Military_Service> Tbl_Military_Service { get; set; }
        public DbSet<Tbl_Old_Appraisal> Tbl_Old_Appraisal { get; set; }
        public DbSet<Tbl_Public_Departments> Tbl_Public_Departments { get; set; }
        public DbSet<Tbl_Qualitative_Group> Tbl_Qualitative_Group { get; set; }
        public DbSet<Tbl_Reason_Type> Tbl_Reason_Type { get; set; }
        public DbSet<Tbl_Relation> Tbl_Relation { get; set; }
        public DbSet<Tbl_Sectors> Tbl_Sectors { get; set; }
        public DbSet<Tbl_Social> Tbl_Social { get; set; }
        public DbSet<Tbl_Subscribes> Tbl_Subscribes { get; set; }
        public DbSet<TBL_SysModules> TBL_SysModules { get; set; }
        public DbSet<TBL_SysUsers> TBL_SysUsers { get; set; }
        public DbSet<Tbl_Training_Place> Tbl_Training_Place { get; set; }
        public DbSet<Tbl_TransactionType> Tbl_TransactionType { get; set; }
        public DbSet<Tbl_Trining_Process_History> Tbl_Trining_Process_History { get; set; }
        public DbSet<Tbl_Trining_Process_History_Type> Tbl_Trining_Process_History_Type { get; set; }
        public DbSet<Tbl_Work_Degree> Tbl_Work_Degree { get; set; }
        public DbSet<test> tests { get; set; }
        public DbSet<View_1> View_1 { get; set; }
        public DbSet<View_2> View_2 { get; set; }
        public DbSet<View_3> View_3 { get; set; }
    
        public virtual ObjectResult<Get_Login_Info_Result> Get_Login_Info(string usr_Name, string usr_Pass, string usr_IP)
        {
            var usr_NameParameter = usr_Name != null ?
                new ObjectParameter("Usr_Name", usr_Name) :
                new ObjectParameter("Usr_Name", typeof(string));
    
            var usr_PassParameter = usr_Pass != null ?
                new ObjectParameter("Usr_Pass", usr_Pass) :
                new ObjectParameter("Usr_Pass", typeof(string));
    
            var usr_IPParameter = usr_IP != null ?
                new ObjectParameter("Usr_IP", usr_IP) :
                new ObjectParameter("Usr_IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Login_Info_Result>("Get_Login_Info", usr_NameParameter, usr_PassParameter, usr_IPParameter);
        }
    
        public virtual ObjectResult<SelectAll_Illegal_Earning_For_MemberID_Result> SelectAll_Illegal_Earning_For_MemberID(Nullable<int> membID)
        {
            var membIDParameter = membID.HasValue ?
                new ObjectParameter("MembID", membID) :
                new ObjectParameter("MembID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAll_Illegal_Earning_For_MemberID_Result>("SelectAll_Illegal_Earning_For_MemberID", membIDParameter);
        }
    
        public virtual ObjectResult<SelectAll_TBL_SysUsers_Tbl_IPS_Result> SelectAll_TBL_SysUsers_Tbl_IPS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAll_TBL_SysUsers_Tbl_IPS_Result>("SelectAll_TBL_SysUsers_Tbl_IPS");
        }
    
        public virtual ObjectResult<SelectAll_Trans_For_MemberID_Result> SelectAll_Trans_For_MemberID(Nullable<int> membID)
        {
            var membIDParameter = membID.HasValue ?
                new ObjectParameter("MembID", membID) :
                new ObjectParameter("MembID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAll_Trans_For_MemberID_Result>("SelectAll_Trans_For_MemberID", membIDParameter);
        }
    
        public virtual ObjectResult<SelectAllCheck_Result> SelectAllCheck()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllCheck_Result>("SelectAllCheck");
        }
    
        public virtual ObjectResult<SelectAllCourses_Result> SelectAllCourses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllCourses_Result>("SelectAllCourses");
        }
    
        public virtual ObjectResult<SelectAllCourses_By_MembID_Result> SelectAllCourses_By_MembID(Nullable<int> membID)
        {
            var membIDParameter = membID.HasValue ?
                new ObjectParameter("MembID", membID) :
                new ObjectParameter("MembID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllCourses_By_MembID_Result>("SelectAllCourses_By_MembID", membIDParameter);
        }
    
        public virtual ObjectResult<SelectAllMembers_Result> SelectAllMembers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMembers_Result>("SelectAllMembers");
        }
    
        public virtual ObjectResult<SelectAllMembers_with_Last_Transaction_By_MembId_Result> SelectAllMembers_with_Last_Transaction_By_MembId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMembers_with_Last_Transaction_By_MembId_Result>("SelectAllMembers_with_Last_Transaction_By_MembId");
        }
    
        public virtual ObjectResult<SelectAllMembers_With_Status_Result> SelectAllMembers_With_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMembers_With_Status_Result>("SelectAllMembers_With_Status");
        }
    
        public virtual ObjectResult<SelectAllMembersWith_AllCourses_Result> SelectAllMembersWith_AllCourses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMembersWith_AllCourses_Result>("SelectAllMembersWith_AllCourses");
        }
    
        public virtual ObjectResult<SelectAllMembersWithStatusAndReason_Result> SelectAllMembersWithStatusAndReason()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMembersWithStatusAndReason_Result>("SelectAllMembersWithStatusAndReason");
        }
    
        public virtual ObjectResult<Nullable<int>> SelectMember_Agaza_Count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SelectMember_Agaza_Count");
        }
    
        public virtual ObjectResult<Nullable<int>> SelectMember_Count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SelectMember_Count");
        }
    
        public virtual ObjectResult<Nullable<int>> SelectMember_Working_Count()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SelectMember_Working_Count");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
